{"version":3,"sources":["webpack:///resources/js/components/badminton-player/BadmintonPlayerClubs.vue","webpack:///resources/js/views/TeamFightImport.vue","webpack:///./resources/js/components/badminton-player/BadmintonPlayerClubs.vue?804f","webpack:///./resources/js/views/TeamFightImport.vue?ca0e","webpack:///./resources/js/components/badminton-player/BadmintonPlayerClubs.vue","webpack:///./resources/js/components/badminton-player/BadmintonPlayerClubs.vue?cd0e","webpack:///./resources/js/components/badminton-player/BadmintonPlayerClubs.vue?4387","webpack:///./resources/js/views/TeamFightImport.vue","webpack:///./resources/js/views/TeamFightImport.vue?e940","webpack:///./resources/js/views/TeamFightImport.vue?1e78"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAYA;AAEA;AACA,8BADA;AAEA,kBAFA;AAGA;AACA,eADA,uBACA,KADA,EACA;AACA;AACA;AAHA,GAHA;AAQA;AACA;AACA;AADA;AADA;AARA,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACqEA;AACA;AAEA;AACA,yBADA;AAEA;AAAA;AAAA,GAFA;AAGA;AACA;AADA,GAHA;AAMA,MANA,kBAMA;AACA;AACA,oBADA;AAEA,kBAFA;AAGA,yBAHA;AAIA,kBAJA;AAKA,mBALA;AAMA,uBANA;AAOA,sBAPA;AAQA,8BARA;AASA,qCATA;AAUA,sBAVA;AAWA;AAXA;AAaA,GApBA;AAqBA;AACA;AACA,kFADA;AAQA;AACA;AACA;AADA;AAGA,OAZA;AAaA,iCAbA;AAcA,YAdA,wBAcA;AAAA;AACA;AACA;AACA;AACA;AACA;AAnBA,KADA;AAsBA;AACA,mFADA;AAWA,eAXA,uBAWA;AACA;AACA;AACA,+BADA;AAEA;AAFA;AADA;AAMA,OAlBA;AAmBA,UAnBA,kBAmBA;AACA;AACA;AArBA,KAtBA;AA6CA;AACA,mFADA;AAUA,eAVA,uBAUA;AACA;AACA;AACA,+BADA;AAEA,+BAFA;AAGA,kDAHA;AAIA,wDAJA;AAKA;AALA;AADA;AASA,OApBA;AAqBA,UArBA,kBAqBA;AACA;AACA;AAvBA;AA7CA,GArBA;AA4FA;AACA,gBADA,0BACA;AAAA;;AACA;AACA,yBACA;AACA,qFADA;AAyBA;AACA;AACA,iCADA;AAEA,mDAFA;AAGA,iCAHA;AAIA;AAJA;AADA;AAzBA,OADA,EAmCA,IAnCA,CAmCA;AAAA;AACA;AACA,OArCA,WAsCA;AACA,mCACA;AACA,wBADA;AAEA,2BAFA;AAGA;AAHA,SADA;AAMA,OA7CA,aA8CA;AACA;AACA,OAhDA;AAkDA,KArDA;AAsDA,cAtDA,sBAsDA,IAtDA,EAsDA;AAAA;;AACA;AACA,0BACA;AACA,wFADA;AAKA;AACA;AACA,kCADA;AAEA;AACA,iCADA;AAEA,mDAFA;AAGA,iCAHA;AAIA;AAJA,aAFA;AAQA;AARA;AADA;AALA,OADA,EAmBA,IAnBA,CAmBA;AAAA;;AACA;;AACA,oCACA;AACA,wBADA;AAEA,4BAFA;AAGA;AAHA,SADA;AAMA,OA3BA,WA4BA;AACA,oCACA;AACA,wBADA;AAEA,2BAFA;AAGA;AAHA,SADA;AAMA,OAnCA,aAoCA;AACA;AACA,OAtCA;AAuCA,KA/FA;AAgGA,kBAhGA,4BAgGA;AACA;AACA,KAlGA;AAmGA,YAnGA,sBAmGA;AACA;AACA;AACA;AACA;AAvGA;AA5FA,G;;;;;;;;;;;;ACtFA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO;AACP,WAAW;AACX,KAAK;AACL;AACA,2BAA2B,4BAA4B,mBAAmB,EAAE;AAC5E;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACvBA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,iBAAiB,qBAAqB;AACtC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA,qBAAqB,yBAAyB;AAC9C;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA,mBAAmB,SAAS,uBAAuB,EAAE;AACrD;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,wBAAwB;AACvC;AACA;AACA;AACA,mBAAmB,SAAS,4BAA4B,EAAE;AAC1D;AACA;AACA,8BAA8B,eAAe;AAC7C;AACA;AACA;AACA;AACA,yBAAyB;AACzB;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,gBAAgB,EAAE;AACxC;AACA;AACA,qBAAqB,sBAAsB;AAC3C;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,eAAe;AACf;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,iBAAiB,EAAE;AACzC;AACA;AACA;AACA;AACA,0BAA0B,2CAA2C;AACrE;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA,gCAAgC,SAAS,gBAAgB,EAAE;AAC3D;AACA,gCAAgC,SAAS,gBAAgB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,gBAAgB,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,uCAAuC,gBAAgB,EAAE;AAC9E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,gBAAgB,EAAE;AACxC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB,uBAAuB,4BAA4B;AACnD;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA,qBAAqB,iCAAiC,gBAAgB,EAAE;AACxE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,SAAS,iBAAiB,OAAO,0BAA0B,EAAE;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA,qBAAqB,8BAA8B;AACnD;AACA;AACA,eAAe,gCAAgC;AAC/C;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uCAAuC;AACnE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,8BAA8B,mCAAmC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,8BAA8B,sCAAsC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,eAAe,gCAAgC;AAC/C;AACA,0BAA0B,uBAAuB;AACjD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,4BAA4B,uCAAuC;AACnE;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,mBAAmB;AACnB;AACA;AACA,8BAA8B,mCAAmC;AACjE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,8BAA8B,sCAAsC;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;AC/YA;AAAA;AAAA;AAAA;AAAmG;AAC3B;AACL;;;AAGnE;AACgG;AAChG,gBAAgB,2GAAU;AAC1B,EAAE,0FAAM;AACR,EAAE,+FAAM;AACR,EAAE,wGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAA0M,CAAgB,gQAAG,EAAC,C;;;;;;;;;;;;ACA9N;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAA8F;AAC3B;AACL;;;AAG9D;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B,EAAE,qFAAM;AACR,EAAE,0FAAM;AACR,EAAE,mGAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAA+L,CAAgB,2PAAG,EAAC,C;;;;;;;;;;;;ACAnN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"17.js","sourcesContent":["<template>\n    <b-select :loading=\"$apollo.queries.badmintonPlayerClubs.loading\"  expanded placeholder=\"Vælge klub\" @input=\"handleInput\">\n        <option\n            v-for=\"option in badmintonPlayerClubs\"\n            :value=\"option.id\"\n            :key=\"option.id\">\n            {{ option.name }}\n        </option>\n    </b-select>\n</template>\n<script>\n\nimport gql from \"graphql-tag\"\n\nexport default {\n    name: 'BadmintonPlayerClubs',\n    props: ['value'],\n    methods: {\n        handleInput (value) {\n            this.$emit('input', value)\n        }\n    },\n    apollo: {\n        badmintonPlayerClubs: {\n            query: gql`\n                query {\n                 badmintonPlayerClubs{\n                    id\n                    name\n                  }\n                }\n               `\n        },\n    }\n}\n</script>\n","<template>\n    <section>\n        <b-button tag=\"router-link\"\n                  type=\"is-link\"\n                  v-bind:to=\"'/team-fight/'+this.teamFightId+'/edit'\">\n            Tilbage\n        </b-button>\n        <div class=\"m-5\"></div>\n        <form @submit.prevent>\n            <div class=\"columns\">\n                <div class=\"column\">\n                    <b-field label=\"Spille dato\">\n                        <b-input v-model=\"gameDate\" disabled></b-input>\n                    </b-field>\n                </div>\n                <div class=\"column\">\n                    <b-field label=\"Ranglist version\">\n                        <b-input v-model=\"version\" disabled></b-input>\n                    </b-field>\n                </div>\n            </div>\n            <b-field label=\"Klub\">\n                <BadmintonPlayerClubs v-model=\"clubId\" @input=\"resetAll\"/>\n            </b-field>\n            <b-field label=\"Sæson\">\n                <b-select v-model=\"season\" expanded placeholder=\"Vælge sæson\">\n                    <option value=\"2020\">2020</option>\n                    <option value=\"2021\">2021</option>\n                </b-select>\n            </b-field>\n            <b-field label=\"Hold\">\n                <b-select v-model=\"playerTeam\" :loading=\"$apollo.queries.badmintonPlayerTeams.loading\" expanded placeholder=\"Vælge hold\" @input=\"resetTeamMatch\">\n                    <option\n                        v-for=\"option in badmintonPlayerTeams\"\n                        :key=\"option.leagueGroupID\"\n                        :value=\"option\">\n                        {{ option.name }} - {{ option.league }}\n                    </option>\n                </b-select>\n            </b-field>\n            <b-field label=\"Kamp\">\n                <b-select v-model=\"teamFight\" :loading=\"$apollo.queries.badmintonPlayerTeamFights.loading\" expanded placeholder=\"Vælge kamp\" @input=\"resetTeamMatch\">\n                    <option\n                        v-for=\"option in badmintonPlayerTeamFights\"\n                        :key=\"option.matchId\"\n                        :value=\"option\">\n                        {{ option.gameTime }} - {{ option.teams.join(' - ') }}\n                    </option>\n                </b-select>\n            </b-field>\n            <b-button type=\"submit\" @click=\"fetchPlayers\">Hent kamp</b-button>\n        </form>\n        <b-loading v-model=\"fetchingTeamMatch\"></b-loading>\n        <div v-if=\"badmintonPlayerTeamMatch\" class=\"columns mt-5\">\n            <div class=\"column is-half\">\n                <h1 class=\"title\">{{ badmintonPlayerTeamMatch.home.name }}</h1>\n                <b-button :loading=\"importing\" class=\"is-primary\" expanded @click=\"importTeam('HOME')\">Import</b-button>\n                <b-table :data=\"badmintonPlayerTeamMatch.home.squad.categories\">\n                    <b-table-column v-slot=\"props\" field=\"name\" label=\"Kategori\">\n                        {{ props.row.name }}\n                    </b-table-column>\n                    <b-table-column v-slot=\"props\" field=\"players\" label=\"Spillere\">\n                        <p v-for=\"player in props.row.players\">{{ player.name }}</p>\n                    </b-table-column>\n                </b-table>\n            </div>\n            <div class=\"column is-half\">\n                <h1 class=\"title\">{{ badmintonPlayerTeamMatch.guest.name }}</h1>\n                <b-button :loading=\"importing\" class=\"is-primary\" expanded @click=\"importTeam('GUEST')\">Import</b-button>\n                <b-table :data=\"badmintonPlayerTeamMatch.guest.squad.categories\">\n                    <b-table-column v-slot=\"props\" field=\"name\" label=\"Kategori\">\n                        {{ props.row.name }}\n                    </b-table-column>\n                    <b-table-column v-slot=\"props\" field=\"players\" label=\"Spillere\">\n                        <p v-for=\"player in props.row.players\">{{ player.name }}</p>\n                    </b-table-column>\n                </b-table>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\nimport gql from \"graphql-tag\"\nimport BadmintonPlayerClubs from \"../components/badminton-player/BadmintonPlayerClubs\";\n\nexport default {\n    name: \"TeamFightImport\",\n    components: {BadmintonPlayerClubs},\n    props: {\n        teamFightId: String\n    },\n    data() {\n        return {\n            gameDate: null,\n            clubId: null,\n            leagueMatchId: null,\n            season: null,\n            version: null,\n            skipPlayers: true,\n            importing: false,\n            fetchingTeamMatch: false,\n            badmintonPlayerTeamMatch: false,\n            playerTeam: null,\n            teamFight: null\n        }\n    },\n    apollo: {\n        team: {\n            query: gql` query ($id: ID!){\n                  team(id: $id){\n                    id\n                    version\n                    gameDate\n                  }\n                }`,\n            variables: function () {\n                return {\n                    id: this.teamFightId\n                }\n            },\n            fetchPolicy: \"network-only\",\n            result({data}) {\n                let date = new Date(data.team.version);\n                this.version = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n                date = new Date(data.team.gameDate);\n                this.gameDate = date.getFullYear() + \"-\" + (date.getMonth() + 1) + \"-\" + date.getDate();\n            }\n        },\n        badmintonPlayerTeams: {\n            query: gql`\n                query($input: BadmintonPlayerTeamsInput){\n                    badmintonPlayerTeams(input: $input){\n                        leagueGroupId\n                        ageGroupId\n                        name\n                        league\n                    }\n                }\n            `,\n            variables() {\n                return {\n                    input: {\n                        clubId: this.clubId,\n                        season: this.season\n                    }\n                }\n            },\n            skip() {\n                return this.clubId === null || this.season === null\n            }\n        },\n        badmintonPlayerTeamFights: {\n            query: gql`\n                query($input: BadmintonPlayerTeamFightsInput){\n                    badmintonPlayerTeamFights(input: $input){\n                        teams\n                        matchId\n                        gameTime\n                    }\n                }\n            `,\n            variables() {\n                return {\n                    input: {\n                        clubId: this.clubId,\n                        season: this.season,\n                        ageGroupId: this.playerTeam.ageGroupId,\n                        leagueGroupId: this.playerTeam.leagueGroupId,\n                        clubName: this.playerTeam.name\n                    }\n                }\n            },\n            skip() {\n                return this.playerTeam === null\n            }\n        }\n    },\n    methods: {\n        fetchPlayers() {\n            this.fetchingTeamMatch = true;\n            this.$apollo.query(\n                {\n                    query: gql`\n                        query badmintonPlayerTeamMatch($badmintonInput: BadmintonPlayerTeamMatchInput) {\n                          badmintonPlayerTeamMatch(input: $badmintonInput) {\n                            guest {\n                              ...matcheClub\n                            }\n                            home{\n                              ...matcheClub\n                            }\n                          }\n                        }\n                        fragment matcheClub on ImportTeam {\n                              name\n                              squad {\n                                playerLimit\n                                categories {\n                                  category\n                                  name\n                                  players {\n                                    name\n                                  }\n                                }\n                              }\n                        }`,\n                    variables: {\n                        badmintonInput: {\n                            \"clubId\": this.clubId,\n                            \"leagueMatchId\": this.teamFight.matchId,\n                            \"season\": this.season,\n                            \"version\": this.version\n                        }\n                    }\n                })\n                .then(({data}) => {\n                    this.badmintonPlayerTeamMatch = data.badmintonPlayerTeamMatch\n                })\n                .catch((error) => {\n                    this.$buefy.snackbar.open(\n                        {\n                            duration: 4000,\n                            type: 'is-dagner',\n                            message: 'Kunne ikke hente kamp'\n                        })\n                })\n                .finally(() => {\n                    this.fetchingTeamMatch = false;\n                })\n\n        },\n        importTeam(side) {\n            this.importing = true;\n            this.$apollo.mutate(\n                {\n                    mutation: gql`\n                        mutation badmintonPlayerTeamMatchImport($importInput: TeamMatchImportInput) {\n                          badmintonPlayerTeamMatchImport(input: $importInput)\n                        }`,\n                    variables: {\n                        importInput: {\n                            team: this.teamFightId,\n                            badmintonPlayerTeamMatch: {\n                                clubId: this.clubId,\n                                leagueMatchId: this.teamFight.matchId,\n                                season: this.season,\n                                version: this.version\n                            },\n                            side: side\n                        },\n                    }\n                })\n                .then(({data}) => {\n                    this.resetTeamMatch()\n                    this.$buefy.snackbar.open(\n                        {\n                            duration: 4000,\n                            type: 'is-success',\n                            message: 'Importering færdig'\n                        })\n                })\n                .catch((error) => {\n                    this.$buefy.snackbar.open(\n                        {\n                            duration: 4000,\n                            type: 'is-dagner',\n                            message: 'Kunne ikke importer'\n                        })\n                })\n                .finally(() => {\n                    this.importing = false;\n                })\n        },\n        resetTeamMatch() {\n            this.badmintonPlayerTeamMatch = false\n        },\n        resetAll() {\n            this.playerTeam = null\n            this.teamFight = null\n            this.resetTeamMatch()\n        }\n    }\n}\n</script>\n\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"b-select\",\n    {\n      attrs: {\n        loading: _vm.$apollo.queries.badmintonPlayerClubs.loading,\n        expanded: \"\",\n        placeholder: \"Vælge klub\"\n      },\n      on: { input: _vm.handleInput }\n    },\n    _vm._l(_vm.badmintonPlayerClubs, function(option) {\n      return _c(\"option\", { key: option.id, domProps: { value: option.id } }, [\n        _vm._v(\"\\n        \" + _vm._s(option.name) + \"\\n    \")\n      ])\n    }),\n    0\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"section\",\n    [\n      _c(\n        \"b-button\",\n        {\n          attrs: {\n            tag: \"router-link\",\n            type: \"is-link\",\n            to: \"/team-fight/\" + this.teamFightId + \"/edit\"\n          }\n        },\n        [_vm._v(\"\\n        Tilbage\\n    \")]\n      ),\n      _vm._v(\" \"),\n      _c(\"div\", { staticClass: \"m-5\" }),\n      _vm._v(\" \"),\n      _c(\n        \"form\",\n        {\n          on: {\n            submit: function($event) {\n              $event.preventDefault()\n            }\n          }\n        },\n        [\n          _c(\"div\", { staticClass: \"columns\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"column\" },\n              [\n                _c(\n                  \"b-field\",\n                  { attrs: { label: \"Spille dato\" } },\n                  [\n                    _c(\"b-input\", {\n                      attrs: { disabled: \"\" },\n                      model: {\n                        value: _vm.gameDate,\n                        callback: function($$v) {\n                          _vm.gameDate = $$v\n                        },\n                        expression: \"gameDate\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"column\" },\n              [\n                _c(\n                  \"b-field\",\n                  { attrs: { label: \"Ranglist version\" } },\n                  [\n                    _c(\"b-input\", {\n                      attrs: { disabled: \"\" },\n                      model: {\n                        value: _vm.version,\n                        callback: function($$v) {\n                          _vm.version = $$v\n                        },\n                        expression: \"version\"\n                      }\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ]),\n          _vm._v(\" \"),\n          _c(\n            \"b-field\",\n            { attrs: { label: \"Klub\" } },\n            [\n              _c(\"BadmintonPlayerClubs\", {\n                on: { input: _vm.resetAll },\n                model: {\n                  value: _vm.clubId,\n                  callback: function($$v) {\n                    _vm.clubId = $$v\n                  },\n                  expression: \"clubId\"\n                }\n              })\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-field\",\n            { attrs: { label: \"Sæson\" } },\n            [\n              _c(\n                \"b-select\",\n                {\n                  attrs: { expanded: \"\", placeholder: \"Vælge sæson\" },\n                  model: {\n                    value: _vm.season,\n                    callback: function($$v) {\n                      _vm.season = $$v\n                    },\n                    expression: \"season\"\n                  }\n                },\n                [\n                  _c(\"option\", { attrs: { value: \"2020\" } }, [_vm._v(\"2020\")]),\n                  _vm._v(\" \"),\n                  _c(\"option\", { attrs: { value: \"2021\" } }, [_vm._v(\"2021\")])\n                ]\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-field\",\n            { attrs: { label: \"Hold\" } },\n            [\n              _c(\n                \"b-select\",\n                {\n                  attrs: {\n                    loading: _vm.$apollo.queries.badmintonPlayerTeams.loading,\n                    expanded: \"\",\n                    placeholder: \"Vælge hold\"\n                  },\n                  on: { input: _vm.resetTeamMatch },\n                  model: {\n                    value: _vm.playerTeam,\n                    callback: function($$v) {\n                      _vm.playerTeam = $$v\n                    },\n                    expression: \"playerTeam\"\n                  }\n                },\n                _vm._l(_vm.badmintonPlayerTeams, function(option) {\n                  return _c(\n                    \"option\",\n                    { key: option.leagueGroupID, domProps: { value: option } },\n                    [\n                      _vm._v(\n                        \"\\n                    \" +\n                          _vm._s(option.name) +\n                          \" - \" +\n                          _vm._s(option.league) +\n                          \"\\n                \"\n                      )\n                    ]\n                  )\n                }),\n                0\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-field\",\n            { attrs: { label: \"Kamp\" } },\n            [\n              _c(\n                \"b-select\",\n                {\n                  attrs: {\n                    loading:\n                      _vm.$apollo.queries.badmintonPlayerTeamFights.loading,\n                    expanded: \"\",\n                    placeholder: \"Vælge kamp\"\n                  },\n                  on: { input: _vm.resetTeamMatch },\n                  model: {\n                    value: _vm.teamFight,\n                    callback: function($$v) {\n                      _vm.teamFight = $$v\n                    },\n                    expression: \"teamFight\"\n                  }\n                },\n                _vm._l(_vm.badmintonPlayerTeamFights, function(option) {\n                  return _c(\n                    \"option\",\n                    { key: option.matchId, domProps: { value: option } },\n                    [\n                      _vm._v(\n                        \"\\n                    \" +\n                          _vm._s(option.gameTime) +\n                          \" - \" +\n                          _vm._s(option.teams.join(\" - \")) +\n                          \"\\n                \"\n                      )\n                    ]\n                  )\n                }),\n                0\n              )\n            ],\n            1\n          ),\n          _vm._v(\" \"),\n          _c(\n            \"b-button\",\n            { attrs: { type: \"submit\" }, on: { click: _vm.fetchPlayers } },\n            [_vm._v(\"Hent kamp\")]\n          )\n        ],\n        1\n      ),\n      _vm._v(\" \"),\n      _c(\"b-loading\", {\n        model: {\n          value: _vm.fetchingTeamMatch,\n          callback: function($$v) {\n            _vm.fetchingTeamMatch = $$v\n          },\n          expression: \"fetchingTeamMatch\"\n        }\n      }),\n      _vm._v(\" \"),\n      _vm.badmintonPlayerTeamMatch\n        ? _c(\"div\", { staticClass: \"columns mt-5\" }, [\n            _c(\n              \"div\",\n              { staticClass: \"column is-half\" },\n              [\n                _c(\"h1\", { staticClass: \"title\" }, [\n                  _vm._v(_vm._s(_vm.badmintonPlayerTeamMatch.home.name))\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-button\",\n                  {\n                    staticClass: \"is-primary\",\n                    attrs: { loading: _vm.importing, expanded: \"\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.importTeam(\"HOME\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"Import\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"b-table\",\n                  {\n                    attrs: {\n                      data: _vm.badmintonPlayerTeamMatch.home.squad.categories\n                    }\n                  },\n                  [\n                    _c(\"b-table-column\", {\n                      attrs: { field: \"name\", label: \"Kategori\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(props) {\n                              return [\n                                _vm._v(\n                                  \"\\n                    \" +\n                                    _vm._s(props.row.name) +\n                                    \"\\n                \"\n                                )\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        false,\n                        1702630298\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"b-table-column\", {\n                      attrs: { field: \"players\", label: \"Spillere\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(props) {\n                              return _vm._l(props.row.players, function(\n                                player\n                              ) {\n                                return _c(\"p\", [_vm._v(_vm._s(player.name))])\n                              })\n                            }\n                          }\n                        ],\n                        null,\n                        false,\n                        3371718981\n                      )\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            ),\n            _vm._v(\" \"),\n            _c(\n              \"div\",\n              { staticClass: \"column is-half\" },\n              [\n                _c(\"h1\", { staticClass: \"title\" }, [\n                  _vm._v(_vm._s(_vm.badmintonPlayerTeamMatch.guest.name))\n                ]),\n                _vm._v(\" \"),\n                _c(\n                  \"b-button\",\n                  {\n                    staticClass: \"is-primary\",\n                    attrs: { loading: _vm.importing, expanded: \"\" },\n                    on: {\n                      click: function($event) {\n                        return _vm.importTeam(\"GUEST\")\n                      }\n                    }\n                  },\n                  [_vm._v(\"Import\")]\n                ),\n                _vm._v(\" \"),\n                _c(\n                  \"b-table\",\n                  {\n                    attrs: {\n                      data: _vm.badmintonPlayerTeamMatch.guest.squad.categories\n                    }\n                  },\n                  [\n                    _c(\"b-table-column\", {\n                      attrs: { field: \"name\", label: \"Kategori\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(props) {\n                              return [\n                                _vm._v(\n                                  \"\\n                    \" +\n                                    _vm._s(props.row.name) +\n                                    \"\\n                \"\n                                )\n                              ]\n                            }\n                          }\n                        ],\n                        null,\n                        false,\n                        1702630298\n                      )\n                    }),\n                    _vm._v(\" \"),\n                    _c(\"b-table-column\", {\n                      attrs: { field: \"players\", label: \"Spillere\" },\n                      scopedSlots: _vm._u(\n                        [\n                          {\n                            key: \"default\",\n                            fn: function(props) {\n                              return _vm._l(props.row.players, function(\n                                player\n                              ) {\n                                return _c(\"p\", [_vm._v(_vm._s(player.name))])\n                              })\n                            }\n                          }\n                        ],\n                        null,\n                        false,\n                        3371718981\n                      )\n                    })\n                  ],\n                  1\n                )\n              ],\n              1\n            )\n          ])\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./BadmintonPlayerClubs.vue?vue&type=template&id=e0d0687c&\"\nimport script from \"./BadmintonPlayerClubs.vue?vue&type=script&lang=js&\"\nexport * from \"./BadmintonPlayerClubs.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/daniel/projects/holdkamp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('e0d0687c')) {\n      api.createRecord('e0d0687c', component.options)\n    } else {\n      api.reload('e0d0687c', component.options)\n    }\n    module.hot.accept(\"./BadmintonPlayerClubs.vue?vue&type=template&id=e0d0687c&\", function () {\n      api.rerender('e0d0687c', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/badminton-player/BadmintonPlayerClubs.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BadmintonPlayerClubs.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BadmintonPlayerClubs.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BadmintonPlayerClubs.vue?vue&type=template&id=e0d0687c&\"","import { render, staticRenderFns } from \"./TeamFightImport.vue?vue&type=template&id=c068f72e&\"\nimport script from \"./TeamFightImport.vue?vue&type=script&lang=js&\"\nexport * from \"./TeamFightImport.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/daniel/projects/holdkamp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('c068f72e')) {\n      api.createRecord('c068f72e', component.options)\n    } else {\n      api.reload('c068f72e', component.options)\n    }\n    module.hot.accept(\"./TeamFightImport.vue?vue&type=template&id=c068f72e&\", function () {\n      api.rerender('c068f72e', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/TeamFightImport.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TeamFightImport.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TeamFightImport.vue?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./TeamFightImport.vue?vue&type=template&id=c068f72e&\""],"sourceRoot":""}