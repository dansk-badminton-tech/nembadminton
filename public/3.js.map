{"version":3,"sources":["webpack:///resources/js/components/badminton-player/BadmintonPlayerTeamsMultiSelect.vue","webpack:///resources/js/views/CheckTeamFight.vue","webpack:///./node_modules/get-value/index.js","webpack:///./node_modules/has-value/index.js","webpack:///./node_modules/has-value/node_modules/isobject/index.js","webpack:///./node_modules/has-values/index.js","webpack:///./node_modules/is-plain-object/index.js","webpack:///./node_modules/isarray/index.js","webpack:///./node_modules/isobject/index.js","webpack:///./node_modules/omit-deep/index.js","webpack:///./node_modules/unset-value/index.js","webpack:///./resources/js/components/badminton-player/BadmintonPlayerTeamsMultiSelect.vue?1d56","webpack:///./resources/js/views/CheckTeamFight.vue?aebd","webpack:///./resources/js/components/badminton-player/BadmintonPlayerTeamsMultiSelect.vue","webpack:///./resources/js/components/badminton-player/BadmintonPlayerTeamsMultiSelect.vue?216e","webpack:///./resources/js/components/badminton-player/BadmintonPlayerTeamsMultiSelect.vue?0e6d","webpack:///./resources/js/views/CheckTeamFight.vue","webpack:///./resources/js/views/CheckTeamFight.vue?76b8","webpack:///./resources/js/views/CheckTeamFight.vue?6e50"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAeA;AAEA;AACA,yCADA;AAEA,sCAFA;AAGA;AACA,SADA,iBACA,QADA,EACA,QADA,EACA;AACA;AACA;AAHA,GAHA;AAQA,MARA,kBAQA;AACA;AACA,gBACA;AACA,qBADA;AAEA;AAFA,OADA,EAKA;AACA,uBADA;AAEA;AAFA,OALA,CADA;AAWA;AAXA;AAaA,GAtBA;AAuBA;AACA;AACA,kFADA;AAWA,YAXA,kBAWA,iBAXA,EAWA,GAXA,EAWA;AACA;AACA,OAbA;AAcA,eAdA,uBAcA;AACA;AACA;AACA,+BADA;AAEA;AAFA;AADA;AAMA,OArBA;AAsBA,UAtBA,kBAsBA;AACA;AACA;AAxBA;AADA;AAvBA,G;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC6DA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA,wBADA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAFA;AAGA,MAHA,kBAGA;AACA;AACA,kBADA;AAEA,qBAFA;AAGA,kBAHA;AAIA,qBAJA;AAKA,6BALA;AAMA,eANA;AAOA,uBAPA;AAQA,8BARA;AASA,uBATA;AAUA,mBAVA;AAWA,kCAXA;AAYA;AAZA;AAcA,GAlBA;AAmBA;AACA,YADA,sBACA;AACA;AACA,KAHA;AAIA;AACA;;AACA;AAAA;AAAA;AACA,+CACA;AACA;AADA,SADA,GAGA,IAHA;AAKA;;AACA;AAAA;AAAA;AACA,+CACA;AACA;AADA,SADA,GAGA,IAHA;AAKA;;AACA;AACA,KArBA;AAsBA,yEAtBA;AAuBA,oCAvBA,8CAuBA;AAAA;;AACA;AACA,0BACA;AACA,uFADA;AAyBA;AACA;AACA,yCADA;AAEA;AAAA;AAAA,cAFA;AAGA,yCAHA;AAIA,qCAJA,CAIA;;AAJA;AADA;AAzBA,OADA,EAmCA,IAnCA,CAmCA;AAAA;AACA;;AACA;AACA,OAtCA,WAsCA;AACA;AACA,OAxCA;AAyCA,KAlEA;AAmEA,YAnEA,sBAmEA;AAAA;;AACA,0BACA;AACA,wFADA;AAQA;AACA;AADA;AARA,OADA,EAaA,IAbA,CAaA;AAAA;AACA;AACA;AACA,OAhBA,aAgBA;AACA;AACA,OAlBA;AAmBA,KAvFA;AAwFA,gBAxFA,wBAwFA,SAxFA,EAwFA,IAxFA,EAwFA;AACA,oCACA;AACA,4BADA;AAEA;AAFA,OADA;AAMA,KA/FA;AAgGA,aAhGA,uBAgGA;AACA;AACA;AACA,KAnGA;AAoGA,qBApGA,+BAoGA;AACA;AACA;AACA;AACA,KAxGA;AAyGA,cAzGA,wBAyGA;AACA;AACA,KA3GA;AA4GA,mBA5GA,6BA4GA;AACA;AACA;AA9GA;AAnBA,G;;;;;;;;;;;ACvFA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACjDA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe,mBAAO,CAAC,yEAAU;AACjC,gBAAgB,mBAAO,CAAC,sDAAY;AACpC,UAAU,mBAAO,CAAC,oDAAW;;AAE7B;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AClBA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,cAAc,mBAAO,CAAC,gDAAS;;AAE/B;AACA;AACA;;;;;;;;;;;;;ACbA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;ACnCA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe,mBAAO,CAAC,kDAAU;;AAEjC;AACA;AACA;AACA;;AAEA;AACA;;AAEA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;;;;;;;;;;;;ACpCA,iBAAiB;;AAEjB;AACA;AACA;;;;;;;;;;;;;ACJA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb;AACA;AACA;;;;;;;;;;;;;ACXa;;AAEb,eAAe,mBAAO,CAAC,gEAAiB;AACxC,YAAY,mBAAO,CAAC,wDAAa;;AAEjC;AACA;AACA;AACA;;AAEA;AACA,mBAAmB,kBAAkB;AACrC;AACA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA;AACA;AACA;;AAEA,iBAAiB,iBAAiB;AAClC;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;;;;;;;;;;;;;ACxCA;AACA;AACA;AACA;AACA;AACA;;AAEa;;AAEb,eAAe,mBAAO,CAAC,kDAAU;AACjC,UAAU,mBAAO,CAAC,oDAAW;;AAE7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;AC/BA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA,OAAO;AACP;AACA;AACA;AACA,KAAK;AACL;AACA;AACA;AACA;AACA;AACA,uBAAuB,mCAAmC;AAC1D;AACA;AACA;AACA;AACA;AACA,SAAS;AACT;AACA;AACA;AACA,GAAG;AACH;AACA;AACA;;;;;;;;;;;;;;ACtCA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,gBAAgB,uBAAuB;AACvC;AACA;AACA;AACA;AACA,WAAW;AACX;AACA;AACA,OAAO;AACP;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qBAAqB;AACrB;AACA;AACA,iBAAiB;AACjB;AACA;AACA;AACA;AACA,uBAAuB,SAAS,iBAAiB,EAAE;AACnD;AACA;AACA;AACA,2BAA2B,SAAS,gBAAgB,EAAE;AACtD;AACA;AACA,mCAAmC,wBAAwB;AAC3D;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS,iBAAiB,EAAE;AACvD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC,qCAAqC,+BAA+B;AACpE;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,+BAA+B;AAC/B;AACA,8CAA8C,SAAS,gBAAgB,EAAE;AACzE;AACA;AACA;AACA,8CAA8C,SAAS,gBAAgB,EAAE;AACzE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS,gBAAgB,EAAE;AAClD;AACA;AACA,kCAAkC,yCAAyC;AAC3E,+BAA+B,6BAA6B;AAC5D;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,yBAAyB;AACzB;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS,iBAAiB,EAAE;AACnD;AACA;AACA;AACA,2BAA2B,SAAS,qBAAqB,EAAE;AAC3D;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA,mCAAmC;AACnC;AACA;AACA,+BAA+B;AAC/B;AACA;AACA;AACA,mCAAmC,SAAS,sBAAsB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS,sBAAsB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS,sBAAsB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS,sBAAsB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS,sBAAsB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS,sBAAsB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA,mCAAmC,SAAS,sBAAsB,EAAE;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC;AACpC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA,wCAAwC;AACxC,+BAA+B;AAC/B;AACA;AACA;AACA,0CAA0C;AAC1C,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,mCAAmC;AACnC,uCAAuC;AACvC,iCAAiC;AACjC;AACA;AACA;AACA,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB,SAAS,mBAAmB,EAAE;AACrD;AACA;AACA;AACA,2BAA2B,SAAS,qBAAqB,EAAE;AAC3D;AACA;AACA,sCAAsC,eAAe;AACrD;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA,2BAA2B,SAAS,gCAAgC,EAAE;AACtE;AACA;AACA,sCAAsC,oCAAoC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA,sCAAsC,oCAAoC;AAC1E;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,6BAA6B;AAC7B;AACA;AACA;AACA;AACA;AACA;AACA;AACA,oCAAoC,wBAAwB;AAC5D,iCAAiC;AACjC,2BAA2B;AAC3B;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,0BAA0B,MAAM,uBAAuB,EAAE;AACzD;AACA;AACA;AACA;AACA;AACA;AACA;AACA,aAAa,sCAAsC;AACnD;AACA;AACA;AACA,iBAAiB,6BAA6B;AAC9C;AACA,4BAA4B,uBAAuB;AACnD;AACA;AACA;AACA;AACA;AACA,qBAAqB,SAAS,8BAA8B,EAAE;AAC9D;AACA;AACA,gCAAgC,mCAAmC;AACnE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA,gCAAgC,sCAAsC;AACtE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,qCAAqC,+BAA+B;AACpE;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA,iCAAiC;AACjC;AACA;AACA;AACA;AACA;AACA;AACA,uBAAuB;AACvB;AACA;AACA;AACA;AACA;AACA;AACA,aAAa;AACb;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;ACraA;AAAA;AAAA;AAAA;AAA0H;AACvC;AACL;;;AAG9E;AACgG;AAChG,gBAAgB,2GAAU;AAC1B,EAAE,qGAAM;AACR,EAAE,sHAAM;AACR,EAAE,+HAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAAqN,CAAgB,2QAAG,EAAC,C;;;;;;;;;;;;ACAzO;AAAA;AAAA;AAAA;AAAA;AAAA;;;;;;;;;;;;;;;;;;;;;;;;ACAA;AAAA;AAAA;AAAA;AAAyG;AACvC;AACL;;;AAG7D;AAC6F;AAC7F,gBAAgB,2GAAU;AAC1B,EAAE,oFAAM;AACR,EAAE,qGAAM;AACR,EAAE,8GAAe;AACjB;AACA;AACA;AACA;;AAEA;;AAEA;AACA,IAAI,KAAU,EAAE,YAiBf;AACD;AACe,gF;;;;;;;;;;;;ACtCf;AAAA;AAAA,wCAA8L,CAAgB,0PAAG,EAAC,C;;;;;;;;;;;;ACAlN;AAAA;AAAA;AAAA;AAAA;AAAA","file":"3.js","sourcesContent":["<template>\n    <b-table\n        :checked-rows.sync=\"teams\"\n        :columns=\"columns\"\n        :data=\"badmintonPlayerTeams\"\n        :loading=\"$apollo.queries.badmintonPlayerTeams.loading\"\n        checkable>\n\n        <template #empty>\n            <div class=\"has-text-centered\">Ingen hold fundet. Har du valgt den rigtige sæson og klub?</div>\n        </template>\n    </b-table>\n</template>\n\n<script>\nimport gql from \"graphql-tag\"\n\nexport default {\n    name: \"BadmintonPlayerTeamsMultiSelect\",\n    props: ['value', 'clubId', 'season'],\n    watch: {\n        teams(newValue, oldValue) {\n            this.$emit('input', newValue)\n        }\n    },\n    data() {\n        return {\n            columns: [\n                {\n                    field: 'name',\n                    label: 'Navn',\n                },\n                {\n                    field: 'league',\n                    label: 'Række',\n                }\n            ],\n            teams: []\n        }\n    },\n    apollo: {\n        badmintonPlayerTeams: {\n            query: gql`\n                query($input: BadmintonPlayerTeamsInput){\n                    badmintonPlayerTeams(input: $input){\n                        leagueGroupId\n                        ageGroupId\n                        name\n                        league\n                    }\n                }\n            `,\n            result(ApolloQueryResult, key) {\n                this.teams = [];\n            },\n            variables() {\n                return {\n                    input: {\n                        clubId: this.clubId,\n                        season: this.season\n                    }\n                }\n            },\n            skip() {\n                return this.clubId === null || this.season === null\n            }\n        },\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","<template>\n    <section>\n        <b-loading v-model=\"this.fetchingAndValidating\" :is-full-page=\"true\"></b-loading>\n        <form v-if=\"!done\">\n            <b-steps v-model=\"activeStep\">\n                <template>\n                    <b-step-item label=\"Basis\">\n                        <b-field label=\"Klub\">\n                            <BadmintonPlayerClubs v-model=\"clubId\" @input=\"clearTeams\"/>\n                        </b-field>\n                        <b-field label=\"Sæson\">\n                            <b-select v-model=\"season\" expanded placeholder=\"Vælge sæson\" @input=\"goToStepTeamsStep\">\n                                <option value=\"2020\">2019/2020</option>\n                                <option value=\"2021\">2021/2022</option>\n                            </b-select>\n                        </b-field>\n                    </b-step-item>\n                    <b-step-item label=\"Hold\">\n                        <BadmintonPlayerTeamsMultiSelect v-model=\"playerTeams\" :clubId=\"clubId\" :season=\"season\" @input=\"clearTeamFights\"/>\n                    </b-step-item>\n                    <b-step-item label=\"Kampe\">\n                        <b-field label=\"Rangliste\">\n                            <b-select v-model=\"rankingList\" expanded placeholder=\"Vælge rangliste\">\n                                <option value=\"2021-07-01\">2021-07-01</option>\n                                <option value=\"2020-12-01\">2020-12-01</option>\n                                <option value=\"2020-11-01\">2020-11-01</option>\n                                <option value=\"2020-10-01\">2020-10-01</option>\n                                <option value=\"2020-09-01\">2020-09-01</option>\n                                <option value=\"2020-08-01\">2020-08-01</option>\n                                <option value=\"2020-07-01\">2020-07-01</option>\n                            </b-select>\n                        </b-field>\n                        <draggable\n                            :list=\"playerTeams\"\n                            handle=\".handle\"\n                        >\n                            <b-field v-for=\"team in playerTeams\" :key=\"team.leagueGroupId+playerTeams.length\" :label=\"team.name\">\n                                <b-icon class=\"handle mr-2\" icon=\"align-justify\"></b-icon>\n                                <BadmintonPlayerTeamFights :clubId=\"clubId\" :player-team=\"team\" :season=\"season\" @input=\"addTeamFight\"/>\n                            </b-field>\n                        </draggable>\n                    </b-step-item>\n                    <b-step-item label=\"Bekræft\">\n                        <b-field label=\"Rangliste\">\n                            <b-input v-model=\"rankingList\" disabled/>\n                        </b-field>\n                        <b-table :data=\"selectedTeamMatches\">\n                            <b-table-column v-slot=\"props\" field=\"team.name\" label=\"Hold\">\n                                {{ props.row.team.name }}\n                            </b-table-column>\n                            <b-table-column v-slot=\"props\" field=\"team.name\" label=\"Kamp\">\n                                {{ props.row.teamMatch.gameTime }} - {{ props.row.teamMatch.teams.join(' - ') }}\n                            </b-table-column>\n                        </b-table>\n\n                        <b-button size=\"is-large mt-2\" @click=\"badmintonPlayerTeamMatchesImport\">Hent og tjek</b-button>\n                    </b-step-item>\n                </template>\n            </b-steps>\n        </form>\n        <b-button v-if=\"done\" @click=\"goToStart\">Tilbage til start</b-button>\n        <div v-if=\"done\" class=\"columns is-multiline\">\n            <div v-for=\"team in teams\" class=\"column is-4\">\n                <h1 class=\"title\">{{ team.name }}</h1>\n                <b-table :data=\"team.squad.categories\">\n                    <b-table-column v-slot=\"props\" field=\"name\" label=\"Kategori\">\n                        {{ props.row.name }}\n                    </b-table-column>\n                    <b-table-column v-slot=\"props\" field=\"players\" label=\"Spillere\">\n                        <p v-for=\"player in props.row.players\" v-bind:class=\"highlight(player)\">{{ player.name }} ({{ findPositions(player, 'N') + ' ' + findPositions(player, props.row.category) }})</p>\n                    </b-table-column>\n                </b-table>\n            </div>\n        </div>\n    </section>\n</template>\n\n<script>\nimport BadmintonPlayerClubs from \"../components/badminton-player/BadmintonPlayerClubs\";\nimport BadmintonPlayerTeams from \"../components/badminton-player/BadmintonPlayerTeams\";\nimport BadmintonPlayerTeamFights from \"../components/badminton-player/BadmintonPlayerTeamFights\";\nimport gql from \"graphql-tag\";\nimport omitDeep from \"omit-deep\";\nimport {findPositions} from \"../helpers\";\nimport BadmintonPlayerTeamsMultiSelect from \"../components/badminton-player/BadmintonPlayerTeamsMultiSelect\";\nimport Draggable from \"vuedraggable\";\n\nexport default {\n    name: \"CheckTeamFight\",\n    components: {BadmintonPlayerTeamsMultiSelect, BadmintonPlayerTeamFights, BadmintonPlayerTeams, BadmintonPlayerClubs, Draggable},\n    data() {\n        return {\n            clubId: null,\n            playerTeams: [],\n            season: null,\n            teamFight: null,\n            selectedTeamMatches: [],\n            teams: [],\n            playingToHigh: [],\n            playingToHighInSquad: [],\n            rankingList: null,\n            activeStep: 0,\n            fetchingAndValidating: false,\n            done: false\n        }\n    },\n    methods: {\n        nextStep() {\n            this.activeStep = 1;\n        },\n        highlight: function (player) {\n            let base = {}\n            if (this.playingToHigh.find(toHighPlayer => toHighPlayer.name === player.name)) {\n                base = {\n                    ...{\n                        'has-background-warning': true\n                    }, ...base\n                }\n            }\n            if (this.playingToHighInSquad.find(toHighPlayer => toHighPlayer.name === player.name)) {\n                base = {\n                    ...{\n                        'has-background-danger': true\n                    }, ...base\n                }\n            }\n            return base;\n        },\n        findPositions,\n        badmintonPlayerTeamMatchesImport() {\n            this.fetchingAndValidating = true;\n            this.$apollo.mutate(\n                {\n                    mutation: gql`mutation ($input: BadmintonPlayerTeamMatchInput!){\n                        badmintonPlayerTeamMatchesImport(input: $input){\n                            name\n                            squad{\n                              playerLimit\n                              categories{\n                                category\n                                name\n                                players{\n                                  refId\n                                  name\n                                  gender\n                                  points{\n                                    points\n                                    position\n                                    category\n                                    version\n                                  }\n                                }\n                              }\n                            }\n                          }\n                        }\n                    `,\n                    variables: {\n                        input: {\n                            clubId: parseInt(this.clubId),\n                            leagueMatchIds: this.selectedTeamMatches.map((teamMatch) => (teamMatch.teamMatch.matchId)),\n                            season: parseInt(this.season),\n                            version: this.rankingList//\"2020-08-01\"\n                        }\n                    }\n                }\n            ).then(({data}) => {\n                this.teams = data.badmintonPlayerTeamMatchesImport\n                this.validate()\n            }).catch(() => {\n                this.fetchingAndValidating = false;\n            })\n        },\n        validate() {\n            this.$apollo.mutate(\n                {\n                    mutation: gql`mutation validateTeamMatch($input: [ValidateTeam!]!){\n                      validateTeamMatch(input: $input){\n                        name\n                        id\n                      }\n                    }\n                    `,\n                    variables: {\n                        input: omitDeep(this.teams, ['__typename'])\n                    }\n                }\n            ).then(({data}) => {\n                this.playingToHigh = data.validateTeamMatch\n                this.done = true;\n            }).finally(() => {\n                this.fetchingAndValidating = false\n            })\n        },\n        addTeamFight(teamMatch, team) {\n            this.selectedTeamMatches.push(\n                {\n                    teamMatch: teamMatch,\n                    team: team\n                }\n            );\n        },\n        goToStart() {\n            this.done = false;\n            this.activeStep = 0;\n        },\n        goToStepTeamsStep() {\n            if (!(this.clubId === null || this.season === null)) {\n                this.activeStep = 1;\n            }\n        },\n        clearTeams() {\n            this.playerTeams = [];\n        },\n        clearTeamFights() {\n            this.selectedTeamMatches = [];\n        }\n    }\n}\n</script>\n\n<style scoped>\n\n</style>\n","/*!\n * get-value <https://github.com/jonschlinkert/get-value>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\nmodule.exports = function(obj, prop, a, b, c) {\n  if (!isObject(obj) || !prop) {\n    return obj;\n  }\n\n  prop = toString(prop);\n\n  // allowing for multiple properties to be passed as\n  // a string or array, but much faster (3-4x) than doing\n  // `[].slice.call(arguments)`\n  if (a) prop += '.' + toString(a);\n  if (b) prop += '.' + toString(b);\n  if (c) prop += '.' + toString(c);\n\n  if (prop in obj) {\n    return obj[prop];\n  }\n\n  var segs = prop.split('.');\n  var len = segs.length;\n  var i = -1;\n\n  while (obj && (++i < len)) {\n    var key = segs[i];\n    while (key[key.length - 1] === '\\\\') {\n      key = key.slice(0, -1) + '.' + segs[++i];\n    }\n    obj = obj[key];\n  }\n  return obj;\n};\n\nfunction isObject(val) {\n  return val !== null && (typeof val === 'object' || typeof val === 'function');\n}\n\nfunction toString(val) {\n  if (!val) return '';\n  if (Array.isArray(val)) {\n    return val.join('.');\n  }\n  return val;\n}\n","/*!\n * has-value <https://github.com/jonschlinkert/has-value>\n *\n * Copyright (c) 2014-2016, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\nvar hasValues = require('has-values');\nvar get = require('get-value');\n\nmodule.exports = function(obj, prop, noZero) {\n  if (isObject(obj)) {\n    return hasValues(get(obj, prop), noZero);\n  }\n  return hasValues(obj, prop);\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nvar isArray = require('isarray');\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && isArray(val) === false;\n};\n","/*!\n * has-values <https://github.com/jonschlinkert/has-values>\n *\n * Copyright (c) 2014-2015, Jon Schlinkert.\n * Licensed under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function hasValue(o, noZero) {\n  if (o === null || o === undefined) {\n    return false;\n  }\n\n  if (typeof o === 'boolean') {\n    return true;\n  }\n\n  if (typeof o === 'number') {\n    if (o === 0 && noZero === true) {\n      return false;\n    }\n    return true;\n  }\n\n  if (o.length !== undefined) {\n    return o.length !== 0;\n  }\n\n  for (var key in o) {\n    if (o.hasOwnProperty(key)) {\n      return true;\n    }\n  }\n  return false;\n};\n","/*!\n * is-plain-object <https://github.com/jonschlinkert/is-plain-object>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\n\nfunction isObjectObject(o) {\n  return isObject(o) === true\n    && Object.prototype.toString.call(o) === '[object Object]';\n}\n\nmodule.exports = function isPlainObject(o) {\n  var ctor,prot;\n\n  if (isObjectObject(o) === false) return false;\n\n  // If has modified constructor\n  ctor = o.constructor;\n  if (typeof ctor !== 'function') return false;\n\n  // If has modified prototype\n  prot = ctor.prototype;\n  if (isObjectObject(prot) === false) return false;\n\n  // If constructor does not have an Object-specific method\n  if (prot.hasOwnProperty('isPrototypeOf') === false) {\n    return false;\n  }\n\n  // Most likely a plain Object\n  return true;\n};\n","var toString = {}.toString;\n\nmodule.exports = Array.isArray || function (arr) {\n  return toString.call(arr) == '[object Array]';\n};\n","/*!\n * isobject <https://github.com/jonschlinkert/isobject>\n *\n * Copyright (c) 2014-2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nmodule.exports = function isObject(val) {\n  return val != null && typeof val === 'object' && Array.isArray(val) === false;\n};\n","'use strict';\n\nvar isObject = require('is-plain-object');\nvar unset = require('unset-value');\n\nmodule.exports = function omitDeep(value, keys) {\n  if (typeof value === 'undefined') {\n    return {};\n  }\n\n  if (Array.isArray(value)) {\n    for (var i = 0; i < value.length; i++) {\n      value[i] = omitDeep(value[i], keys);\n    }\n    return value;\n  }\n\n  if (!isObject(value)) {\n    return value;\n  }\n\n  if (typeof keys === 'string') {\n    keys = [keys];\n  }\n\n  if (!Array.isArray(keys)) {\n    return value;\n  }\n\n  for (var j = 0; j < keys.length; j++) {\n    unset(value, keys[j]);\n  }\n\n  for (var key in value) {\n    if (value.hasOwnProperty(key)) {\n      value[key] = omitDeep(value[key], keys);\n    }\n  }\n\n  return value;\n};\n","/*!\n * unset-value <https://github.com/jonschlinkert/unset-value>\n *\n * Copyright (c) 2015, 2017, Jon Schlinkert.\n * Released under the MIT License.\n */\n\n'use strict';\n\nvar isObject = require('isobject');\nvar has = require('has-value');\n\nmodule.exports = function unset(obj, prop) {\n  if (!isObject(obj)) {\n    throw new TypeError('expected an object.');\n  }\n  if (obj.hasOwnProperty(prop)) {\n    delete obj[prop];\n    return true;\n  }\n\n  if (has(obj, prop)) {\n    var segs = prop.split('.');\n    var last = segs.pop();\n    while (segs.length && segs[segs.length - 1].slice(-1) === '\\\\') {\n      last = segs.pop().slice(0, -1) + '.' + last;\n    }\n    while (segs.length) obj = obj[prop = segs.shift()];\n    return (delete obj[last]);\n  }\n  return true;\n};\n","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\"b-table\", {\n    attrs: {\n      \"checked-rows\": _vm.teams,\n      columns: _vm.columns,\n      data: _vm.badmintonPlayerTeams,\n      loading: _vm.$apollo.queries.badmintonPlayerTeams.loading,\n      checkable: \"\"\n    },\n    on: {\n      \"update:checkedRows\": function($event) {\n        _vm.teams = $event\n      },\n      \"update:checked-rows\": function($event) {\n        _vm.teams = $event\n      }\n    },\n    scopedSlots: _vm._u([\n      {\n        key: \"empty\",\n        fn: function() {\n          return [\n            _c(\"div\", { staticClass: \"has-text-centered\" }, [\n              _vm._v(\n                \"Ingen hold fundet. Har du valgt den rigtige sæson og klub?\"\n              )\n            ])\n          ]\n        },\n        proxy: true\n      }\n    ])\n  })\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","var render = function() {\n  var _vm = this\n  var _h = _vm.$createElement\n  var _c = _vm._self._c || _h\n  return _c(\n    \"section\",\n    [\n      _c(\"b-loading\", {\n        attrs: { \"is-full-page\": true },\n        model: {\n          value: this.fetchingAndValidating,\n          callback: function($$v) {\n            _vm.$set(this, \"fetchingAndValidating\", $$v)\n          },\n          expression: \"this.fetchingAndValidating\"\n        }\n      }),\n      _vm._v(\" \"),\n      !_vm.done\n        ? _c(\n            \"form\",\n            [\n              _c(\n                \"b-steps\",\n                {\n                  model: {\n                    value: _vm.activeStep,\n                    callback: function($$v) {\n                      _vm.activeStep = $$v\n                    },\n                    expression: \"activeStep\"\n                  }\n                },\n                [\n                  [\n                    _c(\n                      \"b-step-item\",\n                      { attrs: { label: \"Basis\" } },\n                      [\n                        _c(\n                          \"b-field\",\n                          { attrs: { label: \"Klub\" } },\n                          [\n                            _c(\"BadmintonPlayerClubs\", {\n                              on: { input: _vm.clearTeams },\n                              model: {\n                                value: _vm.clubId,\n                                callback: function($$v) {\n                                  _vm.clubId = $$v\n                                },\n                                expression: \"clubId\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"b-field\",\n                          { attrs: { label: \"Sæson\" } },\n                          [\n                            _c(\n                              \"b-select\",\n                              {\n                                attrs: {\n                                  expanded: \"\",\n                                  placeholder: \"Vælge sæson\"\n                                },\n                                on: { input: _vm.goToStepTeamsStep },\n                                model: {\n                                  value: _vm.season,\n                                  callback: function($$v) {\n                                    _vm.season = $$v\n                                  },\n                                  expression: \"season\"\n                                }\n                              },\n                              [\n                                _c(\"option\", { attrs: { value: \"2020\" } }, [\n                                  _vm._v(\"2019/2020\")\n                                ]),\n                                _vm._v(\" \"),\n                                _c(\"option\", { attrs: { value: \"2021\" } }, [\n                                  _vm._v(\"2021/2022\")\n                                ])\n                              ]\n                            )\n                          ],\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-step-item\",\n                      { attrs: { label: \"Hold\" } },\n                      [\n                        _c(\"BadmintonPlayerTeamsMultiSelect\", {\n                          attrs: { clubId: _vm.clubId, season: _vm.season },\n                          on: { input: _vm.clearTeamFights },\n                          model: {\n                            value: _vm.playerTeams,\n                            callback: function($$v) {\n                              _vm.playerTeams = $$v\n                            },\n                            expression: \"playerTeams\"\n                          }\n                        })\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-step-item\",\n                      { attrs: { label: \"Kampe\" } },\n                      [\n                        _c(\n                          \"b-field\",\n                          { attrs: { label: \"Rangliste\" } },\n                          [\n                            _c(\n                              \"b-select\",\n                              {\n                                attrs: {\n                                  expanded: \"\",\n                                  placeholder: \"Vælge rangliste\"\n                                },\n                                model: {\n                                  value: _vm.rankingList,\n                                  callback: function($$v) {\n                                    _vm.rankingList = $$v\n                                  },\n                                  expression: \"rankingList\"\n                                }\n                              },\n                              [\n                                _c(\n                                  \"option\",\n                                  { attrs: { value: \"2021-07-01\" } },\n                                  [_vm._v(\"2021-07-01\")]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"option\",\n                                  { attrs: { value: \"2020-12-01\" } },\n                                  [_vm._v(\"2020-12-01\")]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"option\",\n                                  { attrs: { value: \"2020-11-01\" } },\n                                  [_vm._v(\"2020-11-01\")]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"option\",\n                                  { attrs: { value: \"2020-10-01\" } },\n                                  [_vm._v(\"2020-10-01\")]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"option\",\n                                  { attrs: { value: \"2020-09-01\" } },\n                                  [_vm._v(\"2020-09-01\")]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"option\",\n                                  { attrs: { value: \"2020-08-01\" } },\n                                  [_vm._v(\"2020-08-01\")]\n                                ),\n                                _vm._v(\" \"),\n                                _c(\n                                  \"option\",\n                                  { attrs: { value: \"2020-07-01\" } },\n                                  [_vm._v(\"2020-07-01\")]\n                                )\n                              ]\n                            )\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"draggable\",\n                          {\n                            attrs: { list: _vm.playerTeams, handle: \".handle\" }\n                          },\n                          _vm._l(_vm.playerTeams, function(team) {\n                            return _c(\n                              \"b-field\",\n                              {\n                                key:\n                                  team.leagueGroupId + _vm.playerTeams.length,\n                                attrs: { label: team.name }\n                              },\n                              [\n                                _c(\"b-icon\", {\n                                  staticClass: \"handle mr-2\",\n                                  attrs: { icon: \"align-justify\" }\n                                }),\n                                _vm._v(\" \"),\n                                _c(\"BadmintonPlayerTeamFights\", {\n                                  attrs: {\n                                    clubId: _vm.clubId,\n                                    \"player-team\": team,\n                                    season: _vm.season\n                                  },\n                                  on: { input: _vm.addTeamFight }\n                                })\n                              ],\n                              1\n                            )\n                          }),\n                          1\n                        )\n                      ],\n                      1\n                    ),\n                    _vm._v(\" \"),\n                    _c(\n                      \"b-step-item\",\n                      { attrs: { label: \"Bekræft\" } },\n                      [\n                        _c(\n                          \"b-field\",\n                          { attrs: { label: \"Rangliste\" } },\n                          [\n                            _c(\"b-input\", {\n                              attrs: { disabled: \"\" },\n                              model: {\n                                value: _vm.rankingList,\n                                callback: function($$v) {\n                                  _vm.rankingList = $$v\n                                },\n                                expression: \"rankingList\"\n                              }\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"b-table\",\n                          { attrs: { data: _vm.selectedTeamMatches } },\n                          [\n                            _c(\"b-table-column\", {\n                              attrs: { field: \"team.name\", label: \"Hold\" },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(props) {\n                                      return [\n                                        _vm._v(\n                                          \"\\n                            \" +\n                                            _vm._s(props.row.team.name) +\n                                            \"\\n                        \"\n                                        )\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                false,\n                                2163058057\n                              )\n                            }),\n                            _vm._v(\" \"),\n                            _c(\"b-table-column\", {\n                              attrs: { field: \"team.name\", label: \"Kamp\" },\n                              scopedSlots: _vm._u(\n                                [\n                                  {\n                                    key: \"default\",\n                                    fn: function(props) {\n                                      return [\n                                        _vm._v(\n                                          \"\\n                            \" +\n                                            _vm._s(\n                                              props.row.teamMatch.gameTime\n                                            ) +\n                                            \" - \" +\n                                            _vm._s(\n                                              props.row.teamMatch.teams.join(\n                                                \" - \"\n                                              )\n                                            ) +\n                                            \"\\n                        \"\n                                        )\n                                      ]\n                                    }\n                                  }\n                                ],\n                                null,\n                                false,\n                                4278630860\n                              )\n                            })\n                          ],\n                          1\n                        ),\n                        _vm._v(\" \"),\n                        _c(\n                          \"b-button\",\n                          {\n                            attrs: { size: \"is-large mt-2\" },\n                            on: { click: _vm.badmintonPlayerTeamMatchesImport }\n                          },\n                          [_vm._v(\"Hent og tjek\")]\n                        )\n                      ],\n                      1\n                    )\n                  ]\n                ],\n                2\n              )\n            ],\n            1\n          )\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.done\n        ? _c(\"b-button\", { on: { click: _vm.goToStart } }, [\n            _vm._v(\"Tilbage til start\")\n          ])\n        : _vm._e(),\n      _vm._v(\" \"),\n      _vm.done\n        ? _c(\n            \"div\",\n            { staticClass: \"columns is-multiline\" },\n            _vm._l(_vm.teams, function(team) {\n              return _c(\n                \"div\",\n                { staticClass: \"column is-4\" },\n                [\n                  _c(\"h1\", { staticClass: \"title\" }, [\n                    _vm._v(_vm._s(team.name))\n                  ]),\n                  _vm._v(\" \"),\n                  _c(\n                    \"b-table\",\n                    { attrs: { data: team.squad.categories } },\n                    [\n                      _c(\"b-table-column\", {\n                        attrs: { field: \"name\", label: \"Kategori\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function(props) {\n                                return [\n                                  _vm._v(\n                                    \"\\n                    \" +\n                                      _vm._s(props.row.name) +\n                                      \"\\n                \"\n                                  )\n                                ]\n                              }\n                            }\n                          ],\n                          null,\n                          true\n                        )\n                      }),\n                      _vm._v(\" \"),\n                      _c(\"b-table-column\", {\n                        attrs: { field: \"players\", label: \"Spillere\" },\n                        scopedSlots: _vm._u(\n                          [\n                            {\n                              key: \"default\",\n                              fn: function(props) {\n                                return _vm._l(props.row.players, function(\n                                  player\n                                ) {\n                                  return _c(\n                                    \"p\",\n                                    { class: _vm.highlight(player) },\n                                    [\n                                      _vm._v(\n                                        _vm._s(player.name) +\n                                          \" (\" +\n                                          _vm._s(\n                                            _vm.findPositions(player, \"N\") +\n                                              \" \" +\n                                              _vm.findPositions(\n                                                player,\n                                                props.row.category\n                                              )\n                                          ) +\n                                          \")\"\n                                      )\n                                    ]\n                                  )\n                                })\n                              }\n                            }\n                          ],\n                          null,\n                          true\n                        )\n                      })\n                    ],\n                    1\n                  )\n                ],\n                1\n              )\n            }),\n            0\n          )\n        : _vm._e()\n    ],\n    1\n  )\n}\nvar staticRenderFns = []\nrender._withStripped = true\n\nexport { render, staticRenderFns }","import { render, staticRenderFns } from \"./BadmintonPlayerTeamsMultiSelect.vue?vue&type=template&id=6323d7ca&scoped=true&\"\nimport script from \"./BadmintonPlayerTeamsMultiSelect.vue?vue&type=script&lang=js&\"\nexport * from \"./BadmintonPlayerTeamsMultiSelect.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"6323d7ca\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/daniel/projects/holdkamp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('6323d7ca')) {\n      api.createRecord('6323d7ca', component.options)\n    } else {\n      api.reload('6323d7ca', component.options)\n    }\n    module.hot.accept(\"./BadmintonPlayerTeamsMultiSelect.vue?vue&type=template&id=6323d7ca&scoped=true&\", function () {\n      api.rerender('6323d7ca', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/components/badminton-player/BadmintonPlayerTeamsMultiSelect.vue\"\nexport default component.exports","import mod from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BadmintonPlayerTeamsMultiSelect.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BadmintonPlayerTeamsMultiSelect.vue?vue&type=script&lang=js&\"","export * from \"-!../../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./BadmintonPlayerTeamsMultiSelect.vue?vue&type=template&id=6323d7ca&scoped=true&\"","import { render, staticRenderFns } from \"./CheckTeamFight.vue?vue&type=template&id=16be90ea&scoped=true&\"\nimport script from \"./CheckTeamFight.vue?vue&type=script&lang=js&\"\nexport * from \"./CheckTeamFight.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  \"16be90ea\",\n  null\n  \n)\n\n/* hot reload */\nif (module.hot) {\n  var api = require(\"/home/daniel/projects/holdkamp/node_modules/vue-hot-reload-api/dist/index.js\")\n  api.install(require('vue'))\n  if (api.compatible) {\n    module.hot.accept()\n    if (!api.isRecorded('16be90ea')) {\n      api.createRecord('16be90ea', component.options)\n    } else {\n      api.reload('16be90ea', component.options)\n    }\n    module.hot.accept(\"./CheckTeamFight.vue?vue&type=template&id=16be90ea&scoped=true&\", function () {\n      api.rerender('16be90ea', {\n        render: render,\n        staticRenderFns: staticRenderFns\n      })\n    })\n  }\n}\ncomponent.options.__file = \"resources/js/views/CheckTeamFight.vue\"\nexport default component.exports","import mod from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckTeamFight.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/babel-loader/lib/index.js??ref--4-0!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckTeamFight.vue?vue&type=script&lang=js&\"","export * from \"-!../../../node_modules/vue-loader/lib/loaders/templateLoader.js??vue-loader-options!../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./CheckTeamFight.vue?vue&type=template&id=16be90ea&scoped=true&\""],"sourceRoot":""}