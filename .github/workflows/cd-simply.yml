name: Build

on:
  push:
    branches:
      - master

jobs:
  deploy:
    runs-on: ubuntu-latest
    environment: production
    permissions:
      contents: read
      packages: write
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup NodeJS
        uses: actions/setup-node@v4
        with:
          node-version: '20.x'
          cache: 'yarn'

      - name: Frontend build
        run: |
          export VITE_PUSHER_APP_KEY="BFA9mqh3bek.wtz4xub"
          export VITE_PUSHER_HOST="ws.platform.nembadminton.dk"
          export VITE_PUSHER_PORT="443"
          export VITE_PUSHER_SCHEME="https"
          yarn install --frozen-lockfile
          yarn run build

      - name: Upload new frontend
        uses: appleboy/scp-action@v0.1.4
        with:
          host: ${{ secrets.SIMPLY_SSH_HOST }}
          username: ${{ secrets.SIMPLY_SSH_USERNAME }}
          key: ${{ secrets.SIMPLY_SSH_KEY }}
          port: 22
          source: "public/build"
          target: /var/www/badminton.social/projects/frontend-deploy/${{ github.sha }}
          strip_components: 1

      - name: Switch to new version of frontend
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SIMPLY_SSH_HOST }}
          username: ${{ secrets.SIMPLY_SSH_USERNAME }}
          key: ${{ secrets.SIMPLY_SSH_KEY }}
          port: 22
          script: |
            ln -sfn /var/www/badminton.social/projects/frontend-deploy/${{ github.sha }}/build /var/www/badminton.social/projects/holdkamp/public/build

      - name: Deploying newest backend of master
        uses: appleboy/ssh-action@v1.0.0
        with:
          host: ${{ secrets.SIMPLY_SSH_HOST }}
          username: ${{ secrets.SIMPLY_SSH_USERNAME }}
          key: ${{ secrets.SIMPLY_SSH_KEY }}
          port: 22
          script: |
            cd /var/www/badminton.social/projects/holdkamp
            git pull
            php82 /usr/local/bin/composer install --ignore-platform-reqs
            php82 artisan migrate --force
            php82 artisan lighthouse:clear-cache
            php82 artisan lighthouse:cache

