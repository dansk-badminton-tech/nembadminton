extend type Query {
    team(id: ID! @eq) : Teams @find
    teams(order: _ @orderBy(columns: ["created_at", "updated_at", "game_date"])) : [Teams!]! @paginate(defaultCount: 20, scopes: ["currentUser"]) @guard
    teamsByBadmintonId : [Teams!]! @guard @field(resolver: "App\\GraphQL\\Queries\\TeamsByBadmintonId")
}

extend type Mutation {
    updateTeam(input: UpdateTeamInput @spread): Teams! @guard @inject(context: "user.id", name: "user_id") @field(resolver: "App\\GraphQL\\Mutations\\UpdateTeams@updateTeams")
    notify(id: ID!) : Boolean @guard @inject(context: "user.id", name: "user_id") @field(resolver: "App\\GraphQL\\Mutations\\UpdateTeams@notify")
    createTeam(input: CreateTeamInput @spread) : Teams! @create @guard @inject(context: "user.id", name: "user_id")
    deleteTeam(id: ID! @eq) : Teams! @guard @delete @inject(context: "user.id", name: "user_id")
}

input CreateTeamInput {
    club: CreateTeamBelongsTo
    name: String,
    gameDate: String @rename(attribute: "game_date")
}

input CreateTeamBelongsTo {
    connect: ID
}

input UpdateTeamInput {
    id: ID!
    name: String
    gameDate: String @rename(attribute: "game_date")
    squads: [UpdateSquadInput!]!
}

input UpdateSquadInput {
    id: ID
    playerLimit: Int!
    categories: [UpdateCatagoryInput!]!
}

input UpdateCatagoryInput {
    category: String
    name: String
    players: [UpdatePlayerInput!]!
}

input UpdatePlayerInput {
    id: ID
    gender: String
    name: String
    refId: String
    points: [UpdatePointInput!]!
}

input UpdatePointInput {
    id: ID
    category: String
    points: Int
    position: Int
}

type SquadMember {
    id: ID!
    refId: String! @rename(attribute: "member_ref_id")
    name: String!
    gender: String!
    points: [SquadPoint!] @hasMany
}

type SquadPoint {
    points: Int
    position: Int
    category: String
}

type SquadCategory {
    category: String!
    name: String!
    players: [SquadMember!]!
}

type Squad {
    "ID"
    id: Int!
    "Number of players on the team"
    playerLimit: Int!
    "Categories"
    categories: [SquadCategory!]!
}

type Teams {
    id: ID,
    "Squads"
    squads: [Squad!]! @hasMany,
    "Name of the team"
    name: String,
    "Club"
    club: Club
    "Game day"
    gameDate: Date @rename(attribute: "game_date"),
    "Updated at"
    updatedAt: DateTime @rename(attribute: "updated_at")
    "Created at"
    createdAt: DateTime @rename(attribute: "created_at")
}
