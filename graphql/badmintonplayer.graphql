extend type Query {
    "Teams from a club. (Requesting badmintonplayer.dk directly)"
    badmintonPlayerTeams(input: BadmintonPlayerTeamsInput @spread): [BadmintonPlayerTeam] @field(resolver: "FlyCompany\\Scraper\\GraphQL\\Queries\\BadmintonPlayerTeams")
    "Team fights for a team. (Requesting badmintonplayer.dk directly)"
    badmintonPlayerTeamFights(input: BadmintonPlayerTeamFightsInput @spread): [BadmintonPlayerTeamFight] @field(resolver: "FlyCompany\\Scraper\\GraphQL\\Queries\\BadmintonPlayerTeamFights")
    "Team macth. (Requesting badmintonplayer.dk directly)"
    badmintonPlayerTeamMatch(input: BadmintonPlayerTeamMatchInput @spread) : ImportTeamMatch @field(resolver: "FlyCompany\\Scraper\\GraphQL\\Queries\\BadmintonPlayerTeamMatch")
}

extend type Mutation {
    "Get team matches information from badmintonplayer.dk"
    badmintonPlayerTeamMatchesImport(input: BadmintonPlayerTeamMatchInput!) : [ImportTeam!]! @field(resolver: "FlyCompany\\Scraper\\GraphQL\\Mutations\\BadmintonPlayerTeamMatchesImport")
}

type BadmintonPlayerTeamFight {
    teams: [String!]!
    matchId: Int!
    gameTime: String!
}

input BadmintonPlayerTeamFightsInput {
    clubId: Int!
    season: Int!
    ageGroupId: Int!
    leagueGroupId: Int!
    clubName: String!
}

input BadmintonPlayerTeamsInput {
    clubId: Int!
    season: Int!
}

type BadmintonPlayerTeam {
    leagueGroupId: String!
    ageGroupId: String!
    name: String!
    league: String!
}


input BadmintonPlayerTeamMatchInput {
    clubId: Int!
    leagueMatches: [BadmintonPlayerLeagueMatchInput!]!
    season: Int!
    version: Date!
}

input BadmintonPlayerLeagueMatchInput {
    id: Int!
    teamNameHint: String!
    league: String!
    version: Date
}

type ImportTeamMatch {
    home: ImportTeam
    guest: ImportTeam
}

type ImportTeam{
    name: String!
    leagueMatchId: String!
    squad: ImportSquad!
}

type ImportSquad{
    playerLimit: Int!
    league: LeagueType!
    categories: [ImportCategory]
}

type ImportMember{
    refId: String!
    name: String!
    gender: String!
    points: [ImportPoint!]
}

type ImportPoint{
    id: Int,
    points: Int
    position: Int
    category: String
    version: Date
    vintage: String
}

type ImportCategory{
    category: String!
    name: String!
    players: [ImportMember!]!
}
